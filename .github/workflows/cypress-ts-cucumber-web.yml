name: CI/CD

on:
  workflow_dispatch:
    inputs:
      os:
        description: 'Choose the OS for the workflow'
        required: true
        default: 'ubuntu-latest'
        type: choice
        options:
          - 'ubuntu-latest'
          - 'windows-latest'
          - 'macOS-latest'
      create_report:
        description: 'Choose whether to create and upload the test report'
        required: true
        default: 'no'
        type: choice
        options:
          - 'yes'
          - 'no'
      auto_schedule:
        description: 'Should the workflow run automatically?'
        required: true
        default: 'no'
        type: choice
        options:
          - 'yes'
          - 'no'
      schedule_interval:
        description: 'Choose the interval for automatic runs (e.g., daily, weekly, monthly )'
        required: false
        type: choice
        options:
          - 'daily'
          - 'weekly'
          - 'monthly'
      browser:
        description: 'Choose the browser for running the tests'
        required: true
        default: 'chromium'
        type: choice
        options:
          - 'chromium'
          - 'firefox'
          - 'electron'
      node_version:
        description: 'Choose the Node.js version for the workflow'
        required: true
        default: '20'
        type: choice
        options:
          - '15'
          - '18'
          - '20'
          - '21'

jobs:
  setup:
    runs-on: ${{ github.event.inputs.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: List directory
        run: ls -la  # or dir on Windows to verify the presence of package.json

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ github.event.inputs.node_version }}

  cache:
    runs-on: ${{ github.event.inputs.os }}
    needs: setup
    steps:
      - name: Cache Node modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ github.event.inputs.node_version }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ github.event.inputs.node_version }}-
            ${{ runner.os }}-node-
            ${{ runner.os }}-

  test:
    runs-on: ${{ github.event.inputs.os }}
    needs: [setup, cache]
    strategy:
      matrix:
        instance: [1, 2, 3, 4]  # Creates 4 parallel instances
    steps:
      - name: Install dependencies
        run: npm install
        
      - name: Run Cypress tests
        run: |
           node ./printFile.js
           npx cypress run --browser ${{ github.event.inputs.browser }}

  report:
    runs-on: ${{ github.event.inputs.os }}
    if: ${{ github.event.inputs.create_report == 'yes' }}
    needs: test
    strategy:
      matrix:
        instance: [1, 2, 3, 4]  # Creates 4 parallel instances
    steps:
      - name: Create report
        run: node cucumber-html-report.js 

      - name: Upload test report
        uses: actions/upload-artifact@v4
        with:
          name: test-report-${{ github.event.inputs.os }}-${{ matrix.instance }}
          path: ./reports
